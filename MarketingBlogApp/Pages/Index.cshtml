@page
@model MarketingBlogApp.Pages.IndexModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<MarketingBlogApp.Models.ApplicationUser> UserManager
@{
    ViewData["Title"] = "Home page";
    Layout = "/Pages/Shared/_Layout.cshtml";
}

<div class="container-fluid d-flex">
    <!-- Sidebar -->
    <div class="sidebar flex-shrink-0 p-3">
        <h5 class="my-4">Categories</h5>
        <ul class="list-group">
            <li class="list-group-item">
                <a href="?SearchCategory=" class="text-decoration-none @(string.IsNullOrEmpty(Model.SearchCategory) ? "active" : "")">All Categories</a>
            </li>
            @foreach (var category in Model.CategoryOptions)
            {
                <li class="list-group-item">
                    <a href="?SearchCategory=@category.Name" class="text-decoration-none @(category.Name == Model.SearchCategory ? "active" : "")">@category.Name</a>
                </li>
            }
        </ul>
    </div>

    <!-- Main content -->
    <div class="main-content flex-grow-1 p-3">
        <h1 class="my-4">All Blog Posts</h1>

        <!-- Search Bar -->
        <form class="d-flex mb-4 align-items-center" method="get">
            <input type="text" name="SearchString" class="form-control search-input me-2" placeholder="Search posts..." value="@Model.SearchString" />
            <select name="SortBy" class="form-select sort-select me-2">
                <option value="date" selected>Sort by Date</option>
                <option value="likes">Sort by Likes</option>
            </select>
            <select name="SortOrder" class="form-select sort-select me-2">
                <option value="desc" selected>Descending</option>
                <option value="asc">Ascending</option>
            </select>
            <button class="btn btn-outline-primary" type="submit">Search</button>
        </form>


        <!--Styling for the search bar-->
        <style>
            .search-input {
                flex: 2; /* Make the search input larger */
                min-width: 200px; /* Set a minimum width for the search input */
            }

            .sort-select {
                flex: 1; /* Make the sorting dropdowns smaller */
                min-width: 100px; /* Set a minimum width for the sorting dropdowns */
            }

            .form-select, .form-control {
                height: 38px; /* Ensure consistent height for all form controls */
            }
        </style>


        <div class="row">
            @foreach (var post in Model.BlogPosts)
            {
                <div class="col-12 mb-4">
                    <div class="post-card h-100">
                        @if (!string.IsNullOrEmpty(post.ImageUrl))
                        {
                            <img src="@post.ImageUrl" class="card-img-top" alt="Post Image">
                        }
                        <div class="card-body">
                            <h5 class="card-title">@post.Title</h5>
                            <p class="card-text">@post.Content.Substring(0, Math.Min(100, post.Content.Length))...</p>
                            <p class="card-text">
                                <small class="text-muted">@string.Join(", ", post.BlogPostCategories.Select(bc => bc.Category.Name))</small>
                                <br />
                                <small class="text-muted">Author: @post.Author.UserName</small>
                            </p>
                        </div>
                        <div class="card-footer d-flex justify-content-between align-items-center">
                            <form method="post" asp-page-handler="ToggleLike" class="d-inline">
                                <input type="hidden" name="postId" value="@post.Id" />
                                <button type="submit" class="btn btn-link p-0 text-decoration-none">
                                    @if (post.Likes.Any(l => l.UserId == UserManager.GetUserId(User)))
                                    {
                                        <i class="fa-solid fa-heart"></i>
                                    }
                                    else
                                    {
                                        <i class="fa-regular fa-heart"></i>
                                    }
                                    @post.Likes.Count
                                </button>
                            </form>
                            <small>@post.PublishedDate.ToString("yyyy-MM-dd")</small>
                            @if (User.IsInRole("Manager"))
                            {
                                <button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deletePostModal-@post.Id">Delete</button>
                            }
                        </div>
                        <div id="commentSection-@post.Id" class="comment-section">
                            <h6>Comments</h6>
                            @foreach (var comment in post.Comments)
                            {
                                <div class="border p-2 mb-2 rounded">
                                    <strong>@comment.User.UserName:</strong>
                                    <p class="mb-0">@comment.Content</p>
                                    <small class="text-muted">@comment.CommentedDate.ToString("yyyy-MM-dd HH:mm")</small>
                                    @if (UserManager.GetUserId(User) == comment.UserId || UserManager.GetUserId(User) == post.AuthorId || User.IsInRole("Manager"))
                                    {
                                        <button class="btn btn-danger btn-sm mt-2" data-bs-toggle="modal" data-bs-target="#deleteCommentModal-@comment.Id"><i class="fa-solid fa-trash"></i> Delete</button>
                                    }
                                </div>

                            }
                            <form method="post" asp-page-handler="AddComment" class="mt-2">
                                <div class="input-group">
                                    <input type="hidden" name="postId" value="@post.Id" />
                                    <input type="text" name="commentContent" class="form-control" placeholder="Add a comment..." />
                                    <button type="submit" class="btn btn-primary"><i class="fa-solid fa-paper-plane"></i> Submit</button>
                                </div>
                                @if (ModelState["commentContent"]?.Errors.Count > 0)
                                {
                                    <div class="text-danger">@ModelState["commentContent"].Errors[0].ErrorMessage</div>
                                }
                            </form>
                        </div>
                    </div>

                    <!-- Delete Post Modal -->
                    <div class="modal fade" id="deletePostModal-@post.Id" tabindex="-1" aria-labelledby="deletePostModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="deletePostModalLabel">Delete Post</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <p>Are you sure you want to delete this post?</p>
                                </div>
                                <div class="modal-footer">
                                    <form method="post" asp-page-handler="DeletePost">
                                        <input type="hidden" name="postId" value="@post.Id" />
                                        <button type="submit" class="btn btn-danger">Delete</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Delete Comment Modal -->
                    @foreach (var comment in post.Comments)
                    {
                        <div class="modal fade" id="deleteCommentModal-@comment.Id" tabindex="-1" aria-labelledby="deleteCommentModalLabel-@comment.Id" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteCommentModalLabel-@comment.Id">Delete Comment</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <p>Are you sure you want to delete this comment?</p>
                                    </div>
                                    <div class="modal-footer">
                                        <form method="post" asp-page-handler="DeleteComment">
                                            <input type="hidden" name="commentId" value="@comment.Id" />
                                            <button type="submit" class="btn btn-danger">Delete</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>

        <!-- Pagination -->
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="?page=@(Model.CurrentPage - 1)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="?page=@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="?page=@(Model.CurrentPage + 1)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<!-- Display TempData Warnings -->
@if (TempData["Warnings"] is List<string> warnings && warnings.Count > 0)
{
    <div class="alert alert-warning">
        @foreach (var warning in warnings)
        {
            <p>@warning</p>
        }
    </div>
}

