@page
@model MarketingBlogApp.Pages.IndexModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<MarketingBlogApp.Models.ApplicationUser> UserManager
@{
    ViewData["Title"] = "Home page";
    Layout = "/Pages/Shared/_Layout.cshtml";
}

<div class="container-fluid d-flex">
    <!-- Sidebar -->
    <div class="sidebar flex-shrink-0 p-3">
        <h5 class="my-4">Categories</h5>
        <ul class="list-group">
            <li class="list-group-item">
                <a href="?SearchCategory=" class="text-decoration-none @(string.IsNullOrEmpty(Model.SearchCategory) ? "active" : "")">All Categories</a>
            </li>
            @foreach (var category in Model.CategoryOptions)
            {
                <li class="list-group-item">
                    <a href="?SearchCategory=@category.Value" class="text-decoration-none @(category.Value == Model.SearchCategory ? "active" : "")">@category.Text</a>
                </li>
            }
        </ul>
    </div>

    <!-- Main content -->
    <div class="main-content flex-grow-1 p-3">
        <h1 class="my-4">All Blog Posts</h1>
        <div class="row">
            @foreach (var post in Model.BlogPosts)
            {
                <div class="col-12 mb-4">
                    <div class="post-card h-100">
                        @if (!string.IsNullOrEmpty(post.ImageUrl))
                        {
                            <img src="@post.ImageUrl" class="card-img-top" alt="Post Image">
                        }
                        <div class="card-body">
                            <h5 class="card-title">@post.Title</h5>
                            <p class="card-text">@post.Content.Substring(0, Math.Min(100, post.Content.Length))...</p>
                            <p class="card-text">
                                <small class="text-muted">@string.Join(", ", post.BlogPostCategories.Select(bc => bc.Category.Name))</small>
                                <br />
                                <small class="text-muted">Author: @post.Author.UserName</small>
                            </p>
                        </div>
                        <div class="card-footer d-flex justify-content-between align-items-center">
                            <form method="post" asp-page-handler="ToggleLike" class="d-inline">
                                <input type="hidden" name="postId" value="@post.Id" />
                                <button type="submit" class="btn btn-link p-0 text-decoration-none">
                                    @if (post.Likes.Any(l => l.UserId == UserManager.GetUserId(User)))
                                    {
                                        <i class="fa-solid fa-heart"></i>
                                    }
                                    else
                                    {
                                        <i class="fa-regular fa-heart"></i>
                                    }
                                    @post.Likes.Count
                                </button>
                            </form>
                            <small>@post.PublishedDate.ToString("yyyy-MM-dd")</small>
                            @if (User.IsInRole("Manager"))
                            {
                                <button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deletePostModal-@post.Id">Delete</button>
                            }
                        </div>
                        <div id="commentSection-@post.Id" class="comment-section">
                            <h6>Comments</h6>
                            @foreach (var comment in post.Comments)
                            {
                                <div class="border p-2 mb-2 rounded">
                                    <strong>@comment.User.UserName:</strong>
                                    <p class="mb-0">@comment.Content</p>
                                    <small class="text-muted">@comment.CommentedDate.ToString("yyyy-MM-dd HH:mm")</small>
                                    @if (UserManager.GetUserId(User) == comment.UserId || UserManager.GetUserId(User) == post.AuthorId || User.IsInRole("Manager"))
                                    {
                                        <button class="btn btn-danger btn-sm mt-2" data-bs-toggle="modal" data-bs-target="#deleteCommentModal-@comment.Id"><i class="fa-solid fa-trash"></i> Delete</button>
                                    }
                                </div>
                            }
                            <form method="post" asp-page-handler="AddComment" class="mt-2">
                                <div class="input-group">
                                    <input type="hidden" name="postId" value="@post.Id" />
                                    <input type="text" name="commentContent" class="form-control" placeholder="Add a comment..." />
                                    <button type="submit" class="btn btn-primary"><i class="fa-regular fa-comment"></i> Comment</button>
                                </div>
                                @if (ModelState["commentContent"]?.Errors.Count > 0)
                                {
                                    <div class="text-danger mt-2">@ModelState["commentContent"].Errors[0].ErrorMessage</div>
                                }
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Delete Post Modal -->
                <div class="modal fade" id="deletePostModal-@post.Id" tabindex="-1" aria-labelledby="deletePostModalLabel-@post.Id" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="deletePostModalLabel-@post.Id">Delete Post</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form method="post" enctype="multipart/form-data" asp-page-handler="DeletePost">
                                    <input type="hidden" name="postId" value="@post.Id" />
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason for deletion</label>
                                        <textarea name="reason" class="form-control" id="reason" required></textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label for="proofImage" class="form-label">Proof Image</label>
                                        <input type="file" name="proofImage" class="form-control" id="proofImage" required />
                                    </div>
                                    <button type="submit" class="btn btn-danger">Delete</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Delete Comment Modal -->
                @foreach (var comment in post.Comments)
                {
                    <div class="modal fade" id="deleteCommentModal-@comment.Id" tabindex="-1" aria-labelledby="deleteCommentModalLabel-@comment.Id" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="deleteCommentModalLabel-@comment.Id">Delete Comment</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @if (UserManager.GetUserId(User) == comment.UserId)
                                    {
                                        <form method="post" asp-page-handler="DeleteComment">
                                            <input type="hidden" name="commentId" value="@comment.Id" />
                                            <button type="submit" class="btn btn-danger">Delete</button>
                                        </form>
                                    }
                                    else
                                    {
                                        <form method="post" enctype="multipart/form-data" asp-page-handler="DeleteComment">
                                            <input type="hidden" name="commentId" value="@comment.Id" />
                                            <div class="mb-3">
                                                <label for="reason" class="form-label">Reason for deletion</label>
                                                <textarea name="reason" class="form-control" id="reason" required></textarea>
                                            </div>
                                            <div class="mb-3">
                                                <label for="proofImage" class="form-label">Proof Image</label>
                                                <input type="file" name="proofImage" class="form-control" id="proofImage" required />
                                            </div>
                                            <button type="submit" class="btn btn-danger">Delete</button>
                                        </form>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <!-- Pagination -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-page="./Index" asp-route-pageNumber="@i" asp-route-searchCategory="@Model.SearchCategory">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

<!-- Warning Modal -->
@if (TempData["Warnings"] != null)
{
    <div class="modal fade" id="warningModal" tabindex="-1" aria-labelledby="warningModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="warningModalLabel">Unresolved Warnings</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @foreach (var warning in TempData["Warnings"].ToString().Split('\n'))
                    {
                        <div class="alert alert-warning">
                            <strong>@warning</strong>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            if ("@TempData["Warnings"]" !== "") {
                $('#warningModal').modal('show');
            }
        });
    </script>
}

@section Styles {
    <style>
        .post-card {
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
            transition: transform 0.2s ease-in-out;
            background-color: #fff;
            border-radius: 10px;
            overflow: hidden;
        }

            .post-card:hover {
                transform: translateY(-5px);
            }

            .post-card img {
                border-bottom: 1px solid #ddd;
            }

            .post-card .card-body {
                padding: 1.5rem;
            }

            .post-card .card-title {
                font-size: 1.25rem;
                font-weight: bold;
            }

            .post-card .card-text {
                color: #555;
            }

            .post-card .card-footer {
                background-color: #f9f9f9;
                border-top: 1px solid #ddd;
            }

            .post-card .btn-link {
                color: #007bff;
            }

                .post-card .btn-link:hover {
                    text-decoration: underline;
                }

        .comment-section {
            background-color: #f9f9f9;
            padding: 1rem;
            border-radius: 0 0 10px 10px;
        }

        .sidebar {
            position: sticky;
            top: 0;
            height: 100vh;
            padding: 20px;
            background-color: #f8f9fa;
            border-right: 1px solid #dee2e6;
        }

            .sidebar .list-group-item.active {
                background-color: #007bff;
                border-color: #007bff;
                color: #fff;
            }

            .sidebar .list-group-item {
                transition: background-color 0.2s ease-in-out;
            }

                .sidebar .list-group-item:hover {
                    background-color: #f8f9fa;
                }

        .container-fluid {
            display: flex;
        }

        .main-content {
            flex-grow: 1;
        }
    </style>
}
