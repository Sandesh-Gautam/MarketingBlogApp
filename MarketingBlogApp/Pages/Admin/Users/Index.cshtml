@page
@model MarketingBlogApp.Pages.Admin.Users.IndexModel
@{
    Layout = "/Pages/Shared/_Admin.cshtml";
}

<div class="container">
    <h1>Manage Users</h1>



    <div class="d-flex justify-content-between mb-4">
        <a asp-page="/Admin/Dashboard" class="btn btn-secondary">Back to Dashboard</a>
    </div>

    <!-- Search Form -->
    <form method="get" class="mb-4">
        <div class="row">
            <div class="col-md-4">
                <input type="text" name="SearchQuery" value="@Model.SearchQuery" class="form-control" placeholder="Search by Name, Email, Username">
            </div>
            <div class="col-md-3">
                <input type="date" name="StartDate" value="@Model.StartDate?.ToString("yyyy-MM-dd")" class="form-control">
            </div>
            <div class="col-md-3">
                <input type="date" name="EndDate" value="@Model.EndDate?.ToString("yyyy-MM-dd")" class="form-control">
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </form>

    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Username</th>
                <th>Roles</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr class="@(user.IsDisabled ? "table-danger" : "")">
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>@user.UserName</td>
                    <td>@string.Join(", ", Model.UserRoles[user.Id])</td>
                    <td>
                        @if (!user.IsDisabled)
                        {
                            <a asp-page="./Edit" asp-route-id="@user.Id" class="btn btn-primary">Edit</a>
                            @if (!Model.UserRoles[user.Id].Contains("Admin"))
                            {
                                <a asp-page="./Delete" asp-route-id="@user.Id" class="btn btn-danger">Delete</a>
                                <a asp-page="./Disabled" asp-route-id="@user.Id" class="btn btn-warning">Disable</a>
                            }
                        }
                        else
                        {
                            <a asp-page="./Enable" asp-route-id="@user.Id" class="btn btn-success">Enable</a>
                            <a asp-page="./Delete" asp-route-id="@user.Id" class="btn btn-danger">Delete</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (Model.PageIndex > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.PageIndex - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (var i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-page="./Index" asp-route-pageIndex="@i">@i</a>
                    </li>
                }

                @if (Model.PageIndex < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.PageIndex + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>


<style>
    :root {
        --primary-color: #666666; /* Medium grey */
        --taleblue: #6699CC; /* Taleblue */
        --taleblue-light: #CCE5FF; /* Lighter Taleblue */
        --text-color: #333333; /* Dark grey */
        --border-radius: 5px; /* Small border radius */
    }

    body {
        font-family: 'Arial', sans-serif;
        background-color: #f7f7f7; /* Light grey background */
        color: var(--text-color); /* Dark grey text */
        margin: 20px;
        padding: 20px;
    }

    h1 {
        text-align: center;
        color: var(--taleblue); /* Taleblue text color */
        margin-bottom: 30px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        background-color: #ffffff; /* White background */
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); /* Add subtle shadow */
        border-radius: var(--border-radius); /* Rounded corners */
        overflow: hidden; /* Ensure rounded corners work */
    }

    th, td {
        padding: 15px; /* Increased padding for better spacing */
        border: 1px solid #e0e0e0; /* Light grey border */
        color: var(--text-color); /* Dark grey text */
        text-align: left; /* Left-align text */
    }

    th {
        background-color: #ffffff; /* White background for headers */
        color: var(--text-color); /* Dark grey text */
        font-weight: bold; /* Bold text */
    }

    tr:nth-child(even), tr:nth-child(odd) {
        background-color: #ffffff; /* White background for all rows */
    }

    tr:hover {
        background-color: var(--taleblue-light); /* Taleblue background on hover */
    }

    .btn {
        padding: 8px 16px;
        border-radius: var(--border-radius); /* Small border radius */
        cursor: pointer;
        text-decoration: none;
        color: #ffffff; /* White text */
    }

    .btn-primary {
        background-color: var(--taleblue); /* Taleblue */
        border: none;
    }

    .btn-secondary {
        background-color: var(--taleblue-light); /* Light Taleblue */
        border: 1px solid var(--taleblue-light); /* Light Taleblue border */
        color: var(--text-color); /* Dark grey text */
    }

        .btn-secondary:hover {
            background-color: var(--taleblue); /* Taleblue on hover */
            border-color: var(--taleblue); /* Darker Taleblue border on hover */
        }

    .btn-danger {
        background-color: #dc3545; /* Bootstrap's danger color */
        border: none;
    }

    .btn-warning {
        background-color: #ffc107; /* Bootstrap's warning color */
        border: none;
    }

    .btn-success {
        background-color: #28a745; /* Bootstrap's success color */
        border: none;
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
}
