@using Microsoft.AspNetCore.Identity
@using MarketingBlogApp.Models
@using MarketingBlogApp.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IHttpContextAccessor HttpContextAccessor
@inject ApplicationDbContext _context

@{
    var userId = UserManager.GetUserId(HttpContextAccessor.HttpContext.User);
    var warnings = new List<Warning>();

    if (!string.IsNullOrEmpty(userId))
    {
        warnings = _context.Warnings.Where(w => w.UserId == userId && !w.IsResolved).ToList();
    }
}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        if (User.IsInRole("Admin"))
        {
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle text-dark" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Admin @User?.Identity?.Name
                </a>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Logout">Logout</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" asp-area="" asp-page="/Admin/Dashboard">Dashboard</a></li>
                </ul>
            </li>
        }
        else if (User.IsInRole("User"))
        {
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle text-dark" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                    @User?.Identity?.Name
                </a>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Logout">Logout</a></li>
                </ul>
            </li>
        }
        else if (User.IsInRole("Manager"))
        {
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle text-dark" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Manager @User?.Identity?.Name
                </a>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Logout">Logout</a></li>
                </ul>
            </li>
        }
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

@if (warnings.Count > 0)
{
    <div id="warningAlert" class="alert alert-warning" role="alert">
        @foreach (var warning in warnings)
        {
            <p>@warning.Reason</p>
        }
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var warningAlert = document.getElementById('warningAlert');
        if (warningAlert) {
            var hasSeenWarning = sessionStorage.getItem('hasSeenWarning');
            if (!hasSeenWarning) {
                sessionStorage.setItem('hasSeenWarning', 'true');
                setTimeout(function () {
                    warningAlert.style.display = 'none';
                }, 2000); // 2 seconds
            } else {
                warningAlert.style.display = 'none';
            }
        }
    });
</script>